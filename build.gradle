plugins {
	id 'fabric-loom' version '0.9.9'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://jitpack.io' }
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = 'AperLambda'
		url = 'https://aperlambda.github.io/maven'
	}
	maven {
		name = 'Gegy'
		url = 'https://maven.gegy.dev'
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
	
	/* mod dependencies */
	
	// config
	modApi("me.shedaniel.cloth:cloth-config-fabric:$clothconfig_version") {
		exclude(group: 'net.fabricmc.fabric-api')
	}

	// modmenu
	modImplementation "com.terraformersmc:modmenu:$modmenu_version"

	// cardinal components
	modImplementation( "io.github.onyxstudios:Cardinal-Components-API:$cca_version" )

	// trinkes
	modImplementation "dev.emi:trinkets:$trinkets_version"

	// spruce ui
	modImplementation "dev.lambdaurora:spruceui:$spruceui_version"
	include "dev.lambdaurora:spruceui:$spruceui_version"

	/* lib dependencies */

}

processResources {
	inputs.property 'mod_version', project.version
	inputs.property 'cca_version', project.cca_version
	inputs.property 'cc_version', project.clothconfig_version
	inputs.property 'modmenu_version', project.modmenu_version

	filesMatching('fabric.mod.json') {
		include 'fabric.mod.json'
		expand([
				'mod_version': project.version,
				'cca_version': project.cca_version,
		 		'cc_version': project.clothconfig_version,
				'modmenu_version': project.modmenu_version
		])
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
//noinspection GroovyAssignabilityCheck
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'

	it.options.release.set(16)
}

java {
	withSourcesJar()

	toolchain {
		languageVersion = JavaLanguageVersion.of(16)
	}
}

jar {
	from('LICENSE') {
		rename {"${it}_${project.archivesBaseName}"}
	}
}
